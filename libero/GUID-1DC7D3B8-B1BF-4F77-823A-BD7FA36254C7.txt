// ----------------------------------------------------------------------------
// Smart High-Level Synthesis Tool Version 2022.1.1
// Copyright (c) 2015-2022 Microchip Technology Inc. All Rights Reserved.
// For support, please visit https://microchiptech.github.io/fpga-hls-docs/techsupport.html.
// Date: Fri Jun 24 14:45:53 2022
// ----------------------------------------------------------------------------

SmartHLS Summary Report for Project: struct_sum.

Table of Contents
  1. RTL Interface
  2. Scheduling Result
  3. Pipeline Result
  4. Memory Usage
  5. AXI4 Target Interface Address Map
  6. Resource Binding with Adaptive Latency


====== 1. RTL Interface ======

+---------------------------------------------------------------------------------------------------+
| RTL Interface Generated by SmartHLS                                                               |
+----------+----------------+---------------------------------+------------------+------------------+
| C++ Name | Interface Type | Signal Name                     | Signal Bit-width | Signal Direction |
+----------+----------------+---------------------------------+------------------+------------------+
|          | Clock & Reset  | clk (positive edge)             | 1                | input            |
|          |                | reset (synchronous active high) | 1                | input            |
+----------+----------------+---------------------------------+------------------+------------------+
|          | Control        | finish                          | 1                | output           |
|          |                | ready                           | 1                | output           |
|          |                | return_val                      | 32               | output           |
|          |                | start                           | 1                | input            |
+----------+----------------+---------------------------------+------------------+------------------+
| array    | Memory         | array_x_address_a               | 3                | output           |
|          |                | array_x_address_b               | 3                | output           |
|          |                | array_x_clken                   | 1                | output           |
|          |                | array_x_read_data_a             | 8                | input            |
|          |                | array_x_read_data_b             | 8                | input            |
|          |                | array_x_read_en_a               | 1                | output           |
|          |                | array_x_read_en_b               | 1                | output           |
|          |                | array_y_address_a               | 4                | output           |
|          |                | array_y_address_b               | 4                | output           |
|          |                | array_y_clken                   | 1                | output           |
|          |                | array_y_read_data_a             | 16               | input            |
|          |                | array_y_read_data_b             | 16               | input            |
|          |                | array_y_read_en_a               | 1                | output           |
|          |                | array_y_read_en_b               | 1                | output           |
|          |                | array_z_address_a               | 3                | output           |
|          |                | array_z_address_b               | 3                | output           |
|          |                | array_z_clken                   | 1                | output           |
|          |                | array_z_read_data_a             | 64               | input            |
|          |                | array_z_read_data_b             | 64               | input            |
|          |                | array_z_read_en_a               | 1                | output           |
|          |                | array_z_read_en_b               | 1                | output           |
+----------+----------------+---------------------------------+------------------+------------------+

The Verilog top-level module ports that are not listed in the above table are unused. Please tie the unused input ports to 0.

====== 2. Scheduling Result ======

Please use SmartHLS's schedule viewer to examine the schedule.

Basic Block Latencies:

+-------------------------------------------------------+
| Function: sum (non-pipelined function)                |
+-------------+---------------+-------------------------+
| Basic Block | Cycle Latency | Location in Source Code |
+-------------+---------------+-------------------------+
| entry       | 6             | struct_sum.cpp:15,20,22 |
+-------------+---------------+-------------------------+

====== 3. Pipeline Result ======

No pipeline is generated.

====== 4. Memory Usage ======

+----------------+
| Local Memories |
+----------------+
| None           |
+----------------+

+-------------------------+
| Local Constant Memories |
+-------------------------+
| None                    |
+-------------------------+

+-----------------------+
| Shared Local Memories |
+-----------------------+
| None                  |
+-----------------------+

+------------------+
| Aliased Memories |
+------------------+
| None             |
+------------------+

+---------------------------------------------------------------------------+
| I/O Memories                                                              |
+---------+-----------------------+------+-------------+------------+-------+
| Name    | Accessing Function(s) | Type | Size [Bits] | Data Width | Depth |
+---------+-----------------------+------+-------------+------------+-------+
| array_x | sum                   | ROM  | -           | 8          | -     |
| array_y | sum                   | ROM  | -           | 16         | -     |
| array_z | sum                   | ROM  | -           | 64         | -     |
+---------+-----------------------+------+-------------+------------+-------+


====== 5. AXI4 Target Interface Address Map ======

Compatibility of HLS accelerator with reference SoC features: No.
SoC feature is only supported for PolarFireSoC Icicle Kit, and all accelerator interfaces need to be either axi_target or axi_initiator:
  - This project is not an Icicle_SoC project. See the project's config.tcl.
  - The interfaces of the following argument(s), global variable(s), and/or module control are not axi_target or axi_initiator:
    module control, array.


====== 6. Resource Binding with Adaptive Latency ======

Binding to resource with adaptive latency is disabled.
You can enable this feature by setting config parameter 'ADAPTIVE_LATENCY_BINDING' to 1.


